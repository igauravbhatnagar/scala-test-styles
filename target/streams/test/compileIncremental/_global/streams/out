[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(E:\medium\scala-test-styles\src\test\scala\FreeSpecStyle.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(E:\medium\scala-test-styles\src\test\scala\FlatSpecStyle.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(FreeSpecStyleClass)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll sources are invalidated.[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: FreeSpecStyleClass[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all sources: number of invalidated sources > 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 1 Scala source to E:\medium\scala-test-styles\target\scala-2.13\test-classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.3.5:compile for Scala 2.13.1[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.3.5:compile for Scala 2.13.1[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 413ef789 for Scala compiler version 2.13.1[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\Sukhpinder Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.13.1\scala-library-2.13.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	E:\medium\scala-test-styles\target\scala-2.13\test-classes;E:\medium\scala-test-styles\target\scala-2.13\classes;C:\Users\Sukhpinder Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest_2.13\3.1.0\scalatest_2.13-3.1.0.jar;C:\Users\Sukhpinder Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-funsuite_2.13\3.2.0\scalatest-funsuite_2.13-3.2.0.jar;C:\Users\Sukhpinder Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-flatspec_2.13\3.2.0\scalatest-flatspec_2.13-3.2.0.jar;C:\Users\Sukhpinder Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-funspec_2.13\3.2.0\scalatest-funspec_2.13-3.2.0.jar;C:\Users\Sukhpinder Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-wordspec_2.13\3.2.0\scalatest-wordspec_2.13-3.2.0.jar;C:\Users\Sukhpinder Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-freespec_2.13\3.2.0\scalatest-freespec_2.13-3.2.0.jar;C:\Users\Sukhpinder Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-refspec_2.13\3.2.0\scalatest-refspec_2.13-3.2.0.jar;C:\Users\Sukhpinder Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-compatible\3.2.0\scalatest-compatible-3.2.0.jar;C:\Users\Sukhpinder Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scalactic\scalactic_2.13\3.2.0\scalactic_2.13-3.2.0.jar;C:\Users\Sukhpinder Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-reflect\2.13.1\scala-reflect-2.13.1.jar;C:\Users\Sukhpinder Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\modules\scala-xml_2.13\1.2.0\scala-xml_2.13-1.2.0.jar;C:\Users\Sukhpinder Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-core_2.13\3.2.0\scalatest-core_2.13-3.2.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 4.8374618 s[0m
[0m[[0m[0mdebug[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from FreeSpecStyleClass...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: FreeSpecStyleClass[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(FreeSpecStyleClass)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(FreeSpecStyleClass,ModifiedNames(changes = UsedName(lowPriorityConversionCheckedConstraint,[Default]), UsedName(runTest,[Default]), UsedName(styleName,[Default]), UsedName(newAssertionFailedException,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(eq,[Default]), UsedName(assertTypeError,[Default]), UsedName(newTestCanceledException,[Default]), UsedName(typeCheckedConstraint,[Default]), UsedName(execute$default$3,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(unconstrainedEquality,[Implicit]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(CheckingEqualizer,[Default]), UsedName(execute$default$5,[Default]), UsedName(assertCompiles,[Default]), UsedName(testDataFor,[Default]), UsedName(markup,[Default]), UsedName(execute,[Default]), UsedName(pending,[Default]), UsedName(tags,[Default]), UsedName(convertToFreeSpecStringWrapper,[Implicit]), UsedName(expectedTestCount,[Default]), UsedName(clone,[Default]), UsedName(assume,[Default]), UsedName(info,[Default]), UsedName(ResultOfTaggedAsInvocationOnString,[Default]), UsedName(!==,[Default]), UsedName(==,[Default]), UsedName(lowPriorityTypeCheckedConstraint,[Default]), UsedName(nestedSuites,[Default]), UsedName(toString,[Default]), UsedName(suiteId,[Default]), UsedName(registerTest,[Default]), UsedName(succeed,[Default]), UsedName(withClue,[Default]), UsedName(testDataFor$default$2,[Default]), UsedName(pendingUntilFixed,[Default]), UsedName(notify,[Default]), UsedName(assertThrows,[Default]), UsedName(convertEquivalenceToAToBConstraint,[Default]), UsedName(registerIgnoredTest,[Default]), UsedName(NoArgTest,[Default]), UsedName(createCatchReporter,[Default]), UsedName(intercept,[Default]), UsedName(execute$default$6,[Default]), UsedName(convertEquivalenceToAToBConversionConstraint,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(===,[Default]), UsedName(alert,[Default]), UsedName(conversionCheckedConstraint,[Default]), UsedName(withFixture,[Default]), UsedName(rerunner,[Default]), UsedName(Equalizer,[Default]), UsedName(equals,[Default]), UsedName(convertEquivalenceToBToAConversionConstraint,[Default]), UsedName($isInstanceOf,[Default]), UsedName(runTests,[Default]), UsedName(execute$default$4,[Default]), UsedName(run,[Default]), UsedName(finalize,[Default]), UsedName(FreeSpecStringWrapper,[Default]), UsedName(convertToEqualizer,[Implicit]), UsedName(fail,[Default]), UsedName(suiteName,[Default]), UsedName(execute$default$2,[Default]), UsedName(assertDoesNotCompile,[Default]), UsedName(execute$default$7,[Default]), UsedName(!=,[Default]), UsedName(testNames,[Default]), UsedName(convertToCheckingEqualizer,[Default]), UsedName(execute$default$1,[Default]), UsedName(assert,[Default]), UsedName(behave,[Default]), UsedName(cancel,[Default]), UsedName(FreeSpecStyleClass;init;,[Default]), UsedName($init$,[Default]), UsedName(runNestedSuites,[Default]), UsedName(convertEquivalenceToBToAConstraint,[Default]), UsedName(defaultEquality,[Default]), UsedName(note,[Default]), UsedName(isInstanceOf,[Default]), UsedName(FreeSpecStyleClass,[Default]), UsedName(wait,[Default]), UsedName(assertResult,[Default]))) invalidates 1 classes due to The FreeSpecStyleClass has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unconstrainedEquality,[Implicit]), UsedName(convertToFreeSpecStringWrapper,[Implicit]), UsedName(convertToEqualizer,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(FreeSpecStyleClass)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from FlatSpecClass...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: FlatSpecClass[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(FlatSpecClass)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(FlatSpecClass,ModifiedNames(changes = UsedName(lowPriorityConversionCheckedConstraint,[Default]), UsedName(runTest,[Default]), UsedName(shorthandTestRegistrationFunction,[Implicit]), UsedName(styleName,[Default]), UsedName(newAssertionFailedException,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(eq,[Default]), UsedName(assertTypeError,[Default]), UsedName(newTestCanceledException,[Default]), UsedName(typeCheckedConstraint,[Default]), UsedName(execute$default$3,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(unconstrainedEquality,[Implicit]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(CheckingEqualizer,[Default]), UsedName(execute$default$5,[Default]), UsedName(StringCanWrapperForVerb,[Default]), UsedName(assertCompiles,[Default]), UsedName(ItWord,[Default]), UsedName(testDataFor,[Default]), UsedName(markup,[Default]), UsedName(behavior,[Default]), UsedName(execute,[Default]), UsedName(pending,[Default]), UsedName(tags,[Default]), UsedName(expectedTestCount,[Default]), UsedName(clone,[Default]), UsedName(assume,[Default]), UsedName(info,[Default]), UsedName(!==,[Default]), UsedName(==,[Default]), UsedName(lowPriorityTypeCheckedConstraint,[Default]), UsedName(ItVerbStringTaggedAs,[Default]), UsedName(nestedSuites,[Default]), UsedName(toString,[Default]), UsedName(TheyWord,[Default]), UsedName(StringMustWrapperForVerb,[Default]), UsedName(suiteId,[Default]), UsedName(registerTest,[Default]), UsedName(succeed,[Default]), UsedName(withClue,[Default]), UsedName(testDataFor$default$2,[Default]), UsedName(pendingUntilFixed,[Default]), UsedName(notify,[Default]), UsedName(IgnoreVerbStringTaggedAs,[Default]), UsedName(IgnoreWord,[Default]), UsedName(assertThrows,[Default]), UsedName(convertEquivalenceToAToBConstraint,[Default]), UsedName(registerIgnoredTest,[Default]), UsedName(NoArgTest,[Default]), UsedName(createCatchReporter,[Default]), UsedName(IgnoreVerbString,[Default]), UsedName(intercept,[Default]), UsedName(execute$default$6,[Default]), UsedName(convertEquivalenceToAToBConversionConstraint,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(===,[Default]), UsedName(they,[Default]), UsedName(alert,[Default]), UsedName(conversionCheckedConstraint,[Default]), UsedName(withFixture,[Default]), UsedName(rerunner,[Default]), UsedName(Equalizer,[Default]), UsedName(equals,[Default]), UsedName(FlatSpecClass,[Default]), UsedName(convertEquivalenceToBToAConversionConstraint,[Default]), UsedName(convertToStringShouldWrapperForVerb,[Implicit]), UsedName($isInstanceOf,[Default]), UsedName(runTests,[Default]), UsedName(BehaviorWord,[Default]), UsedName(InAndIgnoreMethods,[Default]), UsedName(execute$default$4,[Default]), UsedName(run,[Default]), UsedName(finalize,[Default]), UsedName(ignore,[Default]), UsedName(convertToInAndIgnoreMethods,[Implicit]), UsedName(convertToEqualizer,[Implicit]), UsedName(fail,[Default]), UsedName(suiteName,[Default]), UsedName(execute$default$2,[Default]), UsedName(TheyVerbStringTaggedAs,[Default]), UsedName(assertDoesNotCompile,[Default]), UsedName(execute$default$7,[Default]), UsedName(it,[Default]), UsedName(convertToInAndIgnoreMethodsAfterTaggedAs,[Implicit]), UsedName(!=,[Default]), UsedName(testNames,[Default]), UsedName(convertToCheckingEqualizer,[Default]), UsedName(convertToStringCanWrapper,[Implicit]), UsedName(execute$default$1,[Default]), UsedName(ItVerbString,[Default]), UsedName(assert,[Default]), UsedName(behave,[Default]), UsedName(FlatSpecClass;init;,[Default]), UsedName(StringShouldWrapperForVerb,[Default]), UsedName(cancel,[Default]), UsedName(convertToStringMustWrapperForVerb,[Implicit]), UsedName($init$,[Default]), UsedName(runNestedSuites,[Default]), UsedName(convertEquivalenceToBToAConstraint,[Default]), UsedName(TheyVerbString,[Default]), UsedName(defaultEquality,[Default]), UsedName(note,[Default]), UsedName(shorthandSharedTestRegistrationFunction,[Implicit]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(InAndIgnoreMethodsAfterTaggedAs,[Default]), UsedName(assertResult,[Default]))) invalidates 1 classes due to The FlatSpecClass has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(shorthandTestRegistrationFunction,[Implicit]), UsedName(unconstrainedEquality,[Implicit]), UsedName(convertToStringShouldWrapperForVerb,[Implicit]), UsedName(convertToInAndIgnoreMethods,[Implicit]), UsedName(convertToEqualizer,[Implicit]), UsedName(convertToInAndIgnoreMethodsAfterTaggedAs,[Implicit]), UsedName(convertToStringCanWrapper,[Implicit]), UsedName(convertToStringMustWrapperForVerb,[Implicit]), UsedName(shorthandSharedTestRegistrationFunction,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(FlatSpecClass)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
